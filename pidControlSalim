#define IN1 8
#define IN2 3
#define IN4 10
#define IN3 9
#define EN1 5
#define EN2 6

float kp;
float kd;
float ki;

float current_angle;
float desired_angle = 512;
float error, previousError;

unsigned long currentTime, previousTime;
float elapsedTime;

float setPoint, input, output;

void setup()
{
  Serial.begin(9600);
  pinMode(A0, INPUT);
 
  pinMode(EN1 , OUTPUT);
  pinMode(EN2 , OUTPUT);
  pinMode(IN1 , OUTPUT);
  pinMode(IN2 , OUTPUT);
  pinMode(IN4 , OUTPUT);
  pinMode(IN3 , OUTPUT);

  currentTime = millis();
  elapsedTime = currentTime - previousTime;
 
  setPoint = 0;
}

void loop()
{
  input = analogRead(A0);     //read from rotary encoder connected to A0
  output = PID(input);
  sensor();
  error = setPoint - input;
}

void sensor()
{
  current_angle = analogRead(A0);
  Serial.println(current_angle);

  analogWrite(EN1, 255);
  analogWrite(EN2, 255);
}

float computePID(double inp)
{
  currentTime = millis();   //get current time
  elapsedTime = (double)(currentTime - previousTime);   //compute time elapsed from previous computation
  error = Setpoint - inp;   // determine error
  cumError += error * elapsedTime;    // compute integral
  rateError = (error - lastError)/elapsedTime;    // compute derivative
  double out = kp*error + ki*cumError + kd*rateError;   //PID output               
  lastError = error;    //remember current error
  previousTime = currentTime;   //remember current time
  return out;   //have function return the PID output
}

/*
void PID()
{ 
//PID Control

P_Control = kp * error;

D_Control = kd * (error-error_previous)/Time;

I_control = ki * error * Time;

PID = P_Control + D_Control + I_Control;
}
*/
// https://www.teachmemicro.com/arduino-pid-control-tutorial/
